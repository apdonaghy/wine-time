{"remainingRequest":"/Users/drew/Desktop/projects/wats4000-using-data/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drew/Desktop/projects/wats4000-using-data/src/views/Rhymesaurus.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/drew/Desktop/projects/wats4000-using-data/src/views/Rhymesaurus.vue","mtime":1589064802440},{"path":"/Users/drew/Desktop/projects/wats4000-using-data/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drew/Desktop/projects/wats4000-using-data/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drew/Desktop/projects/wats4000-using-data/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/drew/Desktop/projects/wats4000-using-data/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drew/Desktop/projects/wats4000-using-data/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUmh5bWVzYXVydXMnLAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVzdWx0czogbnVsbCwKICAgICAgZXJyb3JzOiBbXSwKICAgICAgcGhyYXNlOiAnJywKICAgICAgcmh5bWU6ICcnCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgZmluZFdvcmRzOiBmdW5jdGlvbigpewogICAgYXhpb3MuZ2V0KCdodHRwczovL2FwaS5kYXRhbXVzZS5jb20vd29yZHMnLCB7CiAgICAgIHBhcmFtczogewogICAgICAgIG1sOiB0aGlzLnBocmFzZSwKICAgICAgICByZWxfcmh5OiB0aGlzLnJoeW1lCiAgICAgIH0KICAgIH0pCiAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgIHRoaXMucmVzdWx0cyA9IHJlc3BvbnNlLmRhdGE7CiAgICB9KQogICAgLmNhdGNoKGVycm9yID0+IHsKICAgICAgdGhpcy5lcnJvcnMucHVzaChlcnJvcik7CiAgICB9KTsKICB9Cn0KfQo="},{"version":3,"sources":["Rhymesaurus.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Rhymesaurus.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"rhymesaurus\">\n  <form v-on:submit.prevent=\"findWords\">\n      <p>Find rhymes for <input type=\"text\" v-model=\"rhyme\"> related to <input type=\"text\" v-model=\"phrase\"> <button type=\"submit\">Search</button></p>\n    </form>\n    <ul v-if=\"results && results.length > 0\" class=\"results\">\n      <li v-for=\"item of results\" class=\"item\" :key=\"item\">\n        <p><strong>{{item.word}}</strong></p>\n        <p>{{item.score}}</p>\n      </li>\n    </ul>\n\n\n    <div v-else-if=\"results && results.length==0\" class=\"no-results\" >\n      <h2>No Words Found</h2>\n      <p>Please adjust your search to find more words.</p>\n    </div>\n\n       <ul v-if=\"errors && errors.length > 0\" class=\"errors\">\n      <li v-for=\"error of errors\" :key=\"error\">\n        {{error.message}}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  name: 'Rhymesaurus',\n  data () {\n    return {\n      results: null,\n      errors: [],\n      phrase: '',\n      rhyme: ''\n    }\n  },\n  methods: {\n  findWords: function(){\n    axios.get('https://api.datamuse.com/words', {\n      params: {\n        ml: this.phrase,\n        rel_rhy: this.rhyme\n      }\n    })\n    .then(response => {\n      this.results = response.data;\n    })\n    .catch(error => {\n      this.errors.push(error);\n    });\n  }\n}\n}\n</script>\n\n"]}]}